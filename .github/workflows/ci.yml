# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI Run

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
    install-build-test:
        runs-on: ubuntu-latest

        steps:
        - name: Git checkout
          uses: actions/checkout@v2

        - name: Use Node.js 14.x
          uses: actions/setup-node@v1
          with:
            node-version: 14.x
            cache: 'npm'
            #cache-dependency-path: app/server/package-lock.json
            #cache-dependency-path: app/client/package-lock.json

        - name: Start MongoDB '4.2'
          uses: supercharge/mongodb-github-action@1.6.0
          with:
            mongodb-version: '4.2'

        - name: Install client dependencies
          working-directory: ./app/client
          run: npm install

        - name: Install server dependencies
          working-directory: ./app/server
          run: npm install

        - name: Build server & client
          run: |
            echo "Creating temp directory"
            mkdir -p ./.local/temp
            rm -rf ./.local/temp
            echo "Copying server source to temp directory"
            cp -r ./app/server/src ./.local/temp
            echo "Copying package files to temp directory"
            cp ./app/server/package* ./.local/temp/
            echo "Installing server dependencies"
            cd ./.local/temp/
            npm install --prod --no-audit --no-fund
            echo "Removing package files"
            rm -rf ./package*
            cd ../../app/client
            export PUBLIC_URL=http://127.0.0.1:3001
            export BUILD_PATH="./.local/temp/public"
            echo "Building client"
            node ./scripts/build.js

        - name: Generate random string
          run: |
            echo $(LC_ALL=C tr -dc 'a-zA-Z0-9' < /dev/urandom | fold -w 32 | head -n 1))
            echo "randomString="$(echo $(LC_ALL=C tr -dc 'a-zA-Z0-9' < /dev/urandom | fold -w 32 | head -n 1)) >> $GITHUB_ENV

        - name: Test client & server
          run: |
            cd ./app/client
            echo "Running client tests"
            npm run test
            cd ../../app/server
            export PORT=3002
            export MONGODB_URL=mongodb://localhost:27017/${{ env.randomString }}
            export JWT_SECRET=${{ env.randomString }}
            echo "Running server tests"
            npm run test

# echo "randomString=$(LC_ALL=C tr -dc 'a-zA-Z0-9' < /dev/urandom | fold -w 32 | head -n 1)" >> $GITHUB_ENV
#rm dev.env
#cat > /dev.env << ENDOFFILE
#PORT=3002
#MONGODB_URL=mongodb://localhost:27017/${{ env.randomString }}
#JWT_SECRET=${{ env.randomString }}
#ENDOFFILE

      # TODO Clean
      # TODO random string
